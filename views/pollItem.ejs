<% include partials/header.ejs %>

<% include partials/nav.ejs %>

      

          <% if (user) { %>
            
            <div class="ui two column stackable grid container">
                <div class="column">
                  <div class="ui segment">
                    <h2> <%= data.title %> </h2>
                    <form class="ui form" method="POST" action="/polls/myPoll/<%= data._id %>">
                        <div class="field">
                            <select class="ui fluid dropdown" name="voteOption">
                              <option selected hidden disabled value="">Choose your option</option>
                              <% data.options.forEach(function (item) { %>
                                <option value="<%= item %>"> <%= item %> </option>
                              <% }) %>                              
                            </select>                            
                          </div>
                          <button type="submit" class="ui button positive small">Vote</button>
                          <a class="ui button primary small" href="javascript:void(0)">Share on Twitter</a>
                    </form>
                  </div>
                  <button class="ui button tiny display-form">Add your own option</button>
                  <form class="add ui form" action="/polls/myPoll/<%= data._id %>" method="POST">
                    <div class="inline fields">
                      <div class="field">
                        <input type="text" name="addOption" placeholder="Enter your own option" />
                      </div>
                      <button type="submit" class="ui button small positive">Add</button>
                    </div>
                  </form>
                </div>
                <div class="column">
                  <div class="ui segment">
                    <canvas id="myChart" width="400" height="400"></canvas>
                    
                  </div>
                </div>
              </div>
      
              <script type="text/javascript">
                  var ctx = document.getElementById('myChart');
                  var castVotes = '<%= data.votes %>';
                  var votesCasted = castVotes.split(',');
      
                  //Check occurence of each item in votesCasted
                  var occurence = {};
      
                  for (var i = 0; i < votesCasted.length; i++) {
                    if (typeof occurence[votesCasted[i]] == 'undefined') {
                      occurence[votesCasted[i]] = 1;
                    } else {
                      occurence[votesCasted[i]]++;
                    }
                  }
      
                  dataLabel = Object.keys(occurence);
                  dataValue = Object.keys(occurence).map(function (key) { return occurence[key]; });
                  
                  //console.log(occurence);
                  //console.log(votesCasted);
                  
                  //Global config for chart
                  //Chart.defaults.global.layout.padding = 20;
                  Chart.defaults.global.defaultFontFamily = 'Ubuntu';
                  Chart.defaults.global.fontSize = 18;
                  
                  var myChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                      labels: dataLabel,
                      datasets: [{
                        label: '# of votes',
                        data: dataValue,
                        backgroundColor: ['Sienna', 'Tomato', 'Teal', 'BurlyWood', 'Crimson', 'forestgreen', 'DarkSlateGrey', 'Brown', 'Blue', 'Black', 'HotPink', 'MediumSpringGreen','Orange']
                      }]
                    },
                    options: {/*
                      scales: {
                        yAxes: [{
                          ticks: {
                            beginAtZero: true
                          }
                        }],
                        xAxes: [{
                          ticks: {
                            beginAtZero: true
                          }
                        }]
                      },*/
                      title: {
                        display: true,
                        text: 'Vote result basing on Opinion Polls',
                        fontColor: 'black',
                      }
                    },
                    tooltips: {
                      enabled: true
                    }
                  })
                </script>
            
          <% } else { %>
            <div class="ui two column stackable grid container">
                <div class="column">
                  <div class="ui segment">
                    <h2> <%= data.title %> </h2>
                    <form class="ui form" method="POST" action="/<%= data._id %>">
                        <div class="field">
                            <select class="ui fluid dropdown" name="voteOption">
                              <option value="" selected disabled hidden>Choose your option</option>
                              <% data.options.forEach(function (item) { %>
                                <option value="<%= item %>"> <%= item %> </option>
                              <% }) %>
                            </select>
                          </div>
                          <button type="submit" class="ui button positive small">Vote</button>
                          <a class="ui button primary small" href="javascript:void(0)">Share on Twitter</a>
                    </form>
                  </div>
                </div>
                <div class="column">
                  <div class="ui segment">
                    <canvas id ="myChart" width="400" height="400"></canvas>
                  </div>
                </div>
              </div>

              <script type="text/javascript">
                var ctx = document.getElementById('myChart');
                var castVotes = '<%= data.votes %>';
                var votesCasted = castVotes.split(',');

                //Check occurence of each item in votesCasted
                var occurence = {};

                for (var i = 0; i < votesCasted.length; i++) {
                  if (typeof occurence[votesCasted[i]] == 'undefined') {
                    occurence[votesCasted[i]] = 1;
                  } else {
                    occurence[votesCasted[i]]++;
                  }
                }

                dataLabel = Object.keys(occurence);
                dataValue = Object.keys(occurence).map(function (key) { return occurence[key]; });
                
                //console.log(occurence);
                //console.log(votesCasted); 

                //Global config for chart
                //Chart.defaults.global.layout.padding = 20;
                Chart.defaults.global.defaultFontFamily = 'Ubuntu';
                Chart.defaults.global.fontSize = 18;
                
                var myChart = new Chart(ctx, {
                  type: 'doughnut',
                  data: {
                    labels: dataLabel,
                    datasets: [{
                      label: '# of votes',
                      data: dataValue,
                      backgroundColor: ['Sienna', 'Tomato', 'Teal', 'BurlyWood', 'Crimson', 'forestgreen', 'DarkSlateGrey', 'Brown', 'Blue', 'Black', 'HotPink', 'MediumSpringGreen','Orange']
                    }]
                  },
                  options: {/*
                    scales: {
                      yAxes: [{
                        ticks: {
                          beginAtZero: true
                        }
                      }],
                      xAxes: [{
                        ticks: {
                          beginAtZero: true
                        }
                      }]
                    },*/
                    title: {
                      display: true,
                      text: 'Vote result basing on Opinion Polls',
                      fontColor: 'black',
                    }
                  },
                  tooltips: {
                    enabled: true
                  }
                })
              </script>

          <% } %>

<% include partials/footer.ejs %>